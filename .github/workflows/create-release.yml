name: create-release
on:
  push:
    tags:
      - "*.*.*"
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Update version number
        run: |
          node .github/update-version-number.js ${{ env.SOURCE_TAG }}
          echo "${{ env.SOURCE_TAG }}" > Editor/Resources/TSR/VERSION.txt
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      - name: Prepare Folder For Packaging
        run: |
          mkdir -p "Assets/VRLabs/Toony Standard Rebuild"
          ls | grep -v "Assets" | xargs mv -t "Assets/VRLabs/Toony Standard Rebuild"
          echo "Assets/VRLabs.meta" > tsrFullPackage
          echo "Assets/VRLabs/Toony Standard Rebuild.meta" >> tsrFullPackage
          echo -e "fileFormatVersion: 2\nguid: 652a1ba5b00554143bc9a76307dbc4e8\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: " > "Assets/VRLabs.meta"
          echo -e "fileFormatVersion: 2\nguid: f96499e63d999164ea5de50d9ab6aeb7\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: " > "Assets/VRLabs/Toony Standard Rebuild.meta"
          find "Assets/VRLabs/Toony Standard Rebuild/" -name \*.meta >> tsrFullPackage
      - name: Create UnityPackage
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
        uses: FrostBanditTeam/extract-unity-package-action@1
        with:
          outputPackagePath: 'Toony.Standard.Rebuild.${{ env.SOURCE_TAG }}.unitypackage'
          unityProjectPath: '.'

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/release-notes-configuration.json"
          outputFile: "releaseNotes.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: "Toony Standard RE:Build ${{ env.SOURCE_TAG }}"
          body_path: "releaseNotes.txt"
          files: |
            Toony.Standard.Rebuild.${{ env.SOURCE_TAG }}.unitypackage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}